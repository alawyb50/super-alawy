namespace SpriteKind {
    export const coin2 = SpriteKind.create()
    export const coins = SpriteKind.create()
    export const flaw = SpriteKind.create()
    export const baty = SpriteKind.create()
    export const boss = SpriteKind.create()
    export const CHECKPOINT = SpriteKind.create()
}
sprites.onOverlap(SpriteKind.Player, SpriteKind.boss, function (sprite, otherSprite) {
    if (sprite.y > otherSprite.y) {
        otherSprite.destroy(effects.fire, 500)
        music.baDing.play()
        game.over(true)
    }
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.coins, function (sprite, otherSprite) {
    otherSprite.destroy(effects.spray, 500)
    info.changeScoreBy(1)
    music.baDing.play()
})
scene.onOverlapTile(SpriteKind.Player, myTiles.tile4, function (sprite, location) {
    current_level += 1
    startlevel()
})
controller.A.onEvent(ControllerButtonEvent.Pressed, function () {
    if (man.isHittingTile(CollisionDirection.Bottom)) {
        man.vy = -200
    }
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.Projectile, function (sprite, otherSprite) {
    game.over(false)
})
sprites.onOverlap(SpriteKind.Enemy, SpriteKind.Player, function (sprite, otherSprite) {
    if (sprite.y > otherSprite.y) {
        sprite.destroy(effects.fire, 500)
        music.powerDown.play()
        info.changeLifeBy(-1)
    } else {
        info.changeScoreBy(1)
        sprite.destroy(effects.fire, 500)
    }
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.flaw, function (sprite, otherSprite) {
    otherSprite.destroy()
    BEE = sprites.create(img`
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        `, SpriteKind.Enemy)
    animation.runImageAnimation(
    BEE,
    [img`
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . f f f f f f f f . . . . . 
        . . f 1 1 1 f f 1 1 1 f . . . . 
        . . f 1 1 1 f f 1 1 1 f . . . . 
        . . . . . 1 1 1 1 . . . . . . . 
        . . . f f f f f f f f . . . . . 
        . . f 5 5 5 f f 5 5 5 f . . . . 
        . . f 5 5 5 f f 5 5 5 f . . . . 
        . . f 5 5 5 f f 5 5 5 f . . . . 
        . . f 5 5 5 f f 5 5 5 f . . . . 
        . . . f f f f f f f f . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        `,img`
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . f f f f f f f f . . . . . 
        . . f 1 1 1 f f 1 1 1 f . . . . 
        . . f 1 1 1 f f 1 1 1 f . . . . 
        . . . . . 1 1 1 1 . . . . . . . 
        . . . f f f f f f f f . . . . . 
        . . f 5 5 5 f f 5 5 5 f . . . . 
        . . f 5 5 5 f f 5 5 5 f . . . . 
        . . f 5 5 5 f f 5 5 5 f . . . . 
        . . f 5 5 5 f f 5 5 5 f . . . . 
        . . . f f f f f f f f . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        `,img`
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . f f f f f f f f . . . . . 
        . . f 5 5 5 f f 5 5 5 f . . . . 
        . . f 5 5 5 f f 5 5 5 f . . . . 
        . . f 5 5 5 f f 5 5 5 f . . . . 
        . . f 5 5 5 f f 5 5 5 f . . . . 
        . . . f f f f f f f f . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        `,img`
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . f f f f f f f f . . . . . 
        . . f 5 5 5 f f 5 5 5 f . . . . 
        . . f 5 5 5 f f 5 5 5 f . . . . 
        . . f 5 5 5 f f 5 5 5 f . . . . 
        . . f 5 5 5 f f 5 5 5 f . . . . 
        . . . f f f f f f f f . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        `,img`
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . f f f f f f f f . . . . . 
        . . f 5 5 5 f f 5 5 5 f . . . . 
        . . f 5 5 5 f f 5 5 5 f . . . . 
        . . f 5 5 5 f f 5 5 5 f . . . . 
        . . f 5 5 5 f f 5 5 5 f . . . . 
        . . . f f f f f f f f . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        `],
    100,
    true
    )
    BEE.setPosition(0, man.y - -80)
    BEE.follow(man, 50)
})
function GO_TO_CHECKPOINT () {
    if (man_x) {
        if (checklevel == current_level) {
            man.setPosition(man_x, man_y)
        }
    } else {
        game.over(false)
    }
}
function startlevel () {
    man_x = 0
    if (current_level == 0) {
        tiles.setTilemap(tiles.createTilemap(hex``, img`
            . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . 2 2 2 . . . . . 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
            2 2 2 . . . 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 . 2 2 2 2 2 2 2 
            . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 . . . . . . . . . . . 2 2 2 . . . . . . . . . 
            2 . 2 2 2 2 . . . . . . . 2 2 2 . . . . . . . . . . . . . . . . . . 2 2 2 2 . . . . . . . . . . . . 
            . 2 . . . . 2 . . . . . 2 . . . 2 . . 2 2 . . . . . . . . . . 2 2 . . . . . . . . . . . . . . . . . 
            2 . 2 2 2 . . . 2 2 2 . . . . . . . 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . . . . . . 2 . 2 2 2 2 2 2 2 2 2 . . . . . . . . 2 2 2 2 . . . . . . 
            . . . 2 . . . . . . . . . . . . . . . . 2 . . . . . . . . . . . 2 . . . . . . . . . . . . . . . . . 
            . . . . . 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
            . . . . . . . . 2 2 2 . . . . . . . . . . 2 2 2 . . . . 2 2 2 . . . . . . . . . . . . . . . . . . . 
            . 2 2 2 2 . . . . . . . . 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
            . . . . . . 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . . . . 2 2 2 . . . 2 2 . . . . . . . . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
            `, [myTiles.tile12,sprites.builtin.forestTiles0,myTiles.tile13,myTiles.tile14,myTiles.tile15,myTiles.tile16,myTiles.tile18,myTiles.tile23], TileScale.Sixteen))
    } else if (current_level == 1) {
        tiles.setTilemap(tiles.createTilemap(hex`14001e`, img`
            . . . . . . . . . . . . . . . . . . . . 
            2 . . . . . . . . . . . . . . . . . 2 2 
            . . . . 2 2 . 2 2 . . . 2 2 2 2 2 2 . . 
            . 2 2 2 . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . 2 . . . . . . . . 
            . . . . . . . 2 2 2 . . . . . . . . . . 
            . . 2 2 . . . . . . . . . . . . . . . . 
            2 . . 2 2 . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . . . . . 
            . . . . . . . 2 . . 2 2 . . . . . . . . 
            . . 2 . . . . . . . . . . . . . . . . . 
            . . . . . 2 . . 2 . 2 2 . 2 . 2 . . . . 
            . . . . 2 . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . . . . . 
            . . . . . 2 2 . 2 . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . . . . . 
            . 2 2 2 . . . 2 . . 2 . 2 . 2 . . . . . 
            . . . . 2 . . . . . . . . . . . . . . . 
            . . . . . 2 . . . . . . . . . . . . . . 
            . 2 . . . . . . . 2 2 2 . . . . . . . . 
            . . 2 2 . . . . . . . . . 2 . . . . . . 
            . . . . . 2 2 2 2 . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . . . . . 
            . . . . . . . . . . 2 2 2 . . . . . . . 
            . . . . . . . . . . . . . . . . 2 2 2 . 
            . . . . . . 2 2 2 . . . . . . . . . . . 
            . . . 2 2 . . . . . . . . . . . . . . . 
            2 2 . . . . . . . 2 . 2 2 2 . . . . . . 
            . . 2 2 2 2 2 2 2 . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . . . . . 
            `, [myTiles.tile12,myTiles.tile13,myTiles.tile14,myTiles.tile15,myTiles.tile16,myTiles.tile17,sprites.builtin.forestTiles0,myTiles.tile6], TileScale.Sixteen))
    } else if (current_level == 2) {
        tiles.setTilemap(tiles.createTilemap(hex`3c000800000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000080300000000000300000000000003000000000004000000000000000000000000000004000000000000000000070000000000030000000000000000010101000003000101000400000001010000000001010000000100000400060000000101010100000004000001010000000001010100000003000005000000000101000000000101010000000003000000000000000001010100000400000000000000000101010000000000000000000000000001010101000000000000000000000000000000000101000000000101000000000000010101000000000000000100000000000101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202`, img`
            . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
            2 2 2 . . . . 2 2 . . . . . 2 2 . . . . 2 2 . . . 2 . . . . . . . . 2 2 2 2 . . . . . . 2 2 . . . . 2 2 2 . . . . . . . 
            . . . . 2 2 . . . . 2 2 2 . . . . . . . . . . . . . 2 2 2 . . . . . . . . . . . 2 2 2 . . . . . . . . . . . . . 2 2 2 2 
            . . . . . . . . . . . . . . . . 2 2 . . . . 2 2 . . . . . . 2 2 2 . . . . . . . 2 . . . . . 2 2 2 . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
            `, [myTiles.tile12,sprites.builtin.forestTiles0,myTiles.tile13,myTiles.tile14,myTiles.tile15,myTiles.tile16,myTiles.tile17,myTiles.tile23,myTiles.tile6], TileScale.Sixteen))
    } else if (current_level == 3) {
        tiles.setTilemap(tiles.createTilemap(hex``, img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . 2 2 2 . . . . . . . . 2 2 2 . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
            `, [myTiles.transparency16,myTiles.tile9,sprites.builtin.forestTiles0,myTiles.tile6], TileScale.Sixteen))
        for (let value2 of tiles.getTilesByType(myTiles.tile9)) {
            bosss = sprites.create(img`
                . . . . . . . . . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . . . . . . . . . 
                . . . . . . . . . . f f f f . . . . . . . . . . 
                . . . . . . . . f f 1 1 1 1 f f . . . . . . . . 
                . . . . . . . f b 1 1 1 1 1 1 b f . . . . . . . 
                . . . . . . . f 1 1 1 1 1 1 1 d b f . . . . . . 
                . . . . . . f d 1 1 1 1 1 1 1 d d f . . . . . . 
                . . . . . . f d 1 1 1 1 1 1 d d d f . . . . . . 
                . . . . . . f d 1 1 1 d d d d d d f . . . . . . 
                . . . . . . f d 1 1 1 d d d d d d f . . . . . . 
                . . . . . . f d 1 d d d d d d d b f . . . . . . 
                . . . . . . f d 1 d f b d d b b f f . . . . . . 
                . . . . . . f b d d f c d b b c f . . . . . . . 
                . . . . . f f f f c c d d b f f f . . . . . . . 
                . . . . f c b 1 b b b f c f f f f . . . . . . . 
                . . . . f 1 b 1 d c f f f f f f f f . . . . . . 
                . . . . f d f d f . . f f f f f f f f f f . . . 
                . . . . . f . f . . . . . f f f f f f . . . . . 
                . . . . . . . . . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . . . . . . . . . 
                `, SpriteKind.boss)
            tiles.placeOnTile(bosss, value2)
            tiles.setTileAt(value2, myTiles.tile0)
        }
    } else {
    	
    }
    man.ay = 200
    tiles.placeOnRandomTile(man, myTiles.tile6)
    scene.cameraFollowSprite(man)
    for (let value of tiles.getTilesByType(sprites.dungeon.collectibleInsignia)) {
        tiles.placeOnRandomTile(man, sprites.dungeon.collectibleInsignia)
        tiles.setTileAt(value, myTiles.tile0)
    }
    for (let value3 of sprites.allOfKind(SpriteKind.coins)) {
        value3.destroy(effects.fire, 500)
    }
    for (let value4 of sprites.allOfKind(SpriteKind.flaw)) {
        value4.destroy(effects.fire, 500)
    }
    for (let value5 of sprites.allOfKind(SpriteKind.Enemy)) {
        value5.destroy(effects.fire, 500)
    }
    for (let value6 of tiles.getTilesByType(myTiles.tile2)) {
        coin = sprites.create(img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            `, SpriteKind.coins)
        animation.runImageAnimation(
        coin,
        [img`
            . . . . . . . . . . . . . . . . 
            . . . . 5 5 5 5 5 5 5 . . . . . 
            . . 5 5 5 5 5 5 5 5 5 5 5 . . . 
            . 5 5 5 5 5 5 5 5 5 5 5 5 5 . . 
            . 5 5 5 5 5 5 5 5 5 5 5 5 5 . . 
            5 5 5 5 5 5 4 4 4 4 4 5 5 5 5 . 
            5 5 2 5 5 4 4 4 4 4 4 4 5 5 5 . 
            5 5 5 5 5 4 2 2 2 4 4 4 5 5 5 . 
            5 5 5 5 5 4 2 2 2 4 4 4 5 5 5 . 
            5 5 5 5 5 4 2 2 2 4 4 4 5 5 5 . 
            5 5 5 5 5 4 4 4 4 4 4 4 5 5 5 . 
            5 5 5 5 5 5 4 4 4 4 4 5 5 5 5 . 
            . 5 5 5 5 5 5 5 5 5 5 5 5 5 . . 
            . 5 5 5 5 5 5 5 5 5 5 5 5 5 . . 
            . . 5 5 5 5 5 5 5 5 5 5 5 . . . 
            . . . . 5 5 5 5 5 5 5 . . . . . 
            `,img`
            . . . . . . . . . . . . . . . . 
            . . . . . . 5 5 5 5 5 . . . . . 
            . . . . 5 5 5 5 5 5 5 5 . . . . 
            . . . 5 5 5 5 5 5 5 5 5 5 . . . 
            . . . 5 5 5 5 5 5 5 5 5 5 . . . 
            . . 5 5 5 5 5 4 4 4 4 5 5 5 . . 
            . . 5 5 2 5 5 4 4 4 4 5 5 5 . . 
            . . 5 5 5 5 5 2 2 4 4 5 5 5 . . 
            . . 5 5 5 5 5 2 2 4 4 5 5 5 . . 
            . . 5 5 5 5 5 2 2 4 4 5 5 5 . . 
            . . 5 5 5 5 5 4 4 4 4 5 5 5 . . 
            . . 5 5 5 5 5 4 4 4 4 5 5 5 . . 
            . . . 5 5 5 5 5 5 5 5 5 5 . . . 
            . . . 5 5 5 5 5 5 5 5 5 5 . . . 
            . . . . 5 5 5 5 5 5 5 5 . . . . 
            . . . . . . 5 5 5 5 5 . . . . . 
            `,img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . 5 . . . . . . . . 
            . . . . . . . 5 5 . . . . . . . 
            . . . . . . . 5 5 . . . . . . . 
            . . . . . . . 5 5 . . . . . . . 
            . . . . . . 5 5 5 5 . . . . . . 
            . . . . . . 5 5 5 5 . . . . . . 
            . . . . . . 5 5 5 5 . . . . . . 
            . . . . . . 5 5 5 5 . . . . . . 
            . . . . . . 5 5 5 5 . . . . . . 
            . . . . . . 5 5 5 5 . . . . . . 
            . . . . . . 5 5 5 5 . . . . . . 
            . . . . . . . 5 5 . . . . . . . 
            . . . . . . . 5 5 . . . . . . . 
            . . . . . . . 5 5 . . . . . . . 
            . . . . . . . 5 . . . . . . . . 
            `,img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . . 5 5 . . . . . . 
            . . . . . . . . 5 5 . . . . . . 
            . . . . . . . 5 5 5 . . . . . . 
            . . . . . . . 5 5 5 . . . . . . 
            . . . . . . 5 5 5 5 . . . . . . 
            . . . . . . 5 5 5 5 . . . . . . 
            . . . . . . 5 5 5 5 . . . . . . 
            . . . . . . 5 5 5 5 . . . . . . 
            . . . . . . 5 5 5 5 . . . . . . 
            . . . . . . 5 5 5 5 . . . . . . 
            . . . . . . 5 5 5 5 . . . . . . 
            . . . . . . . 5 5 5 . . . . . . 
            . . . . . . . 5 5 5 . . . . . . 
            . . . . . . . . 5 5 . . . . . . 
            . . . . . . . . 5 5 . . . . . . 
            `,img`
            . . . . . . . . . . . . . . . . 
            . . . . 5 5 5 5 5 5 5 . . . . . 
            . . . 5 5 5 5 5 5 5 5 5 5 . . . 
            . . 5 5 5 5 5 5 5 5 5 5 5 5 . . 
            . . 5 5 5 5 5 5 5 5 5 5 5 5 . . 
            . 5 5 5 5 5 4 4 4 4 4 5 5 5 5 . 
            . 5 5 5 5 4 4 4 4 4 4 4 5 5 5 . 
            . 5 5 5 5 4 2 2 2 4 4 4 5 5 5 . 
            . 5 5 5 5 4 2 2 2 4 4 4 5 5 5 . 
            . 5 5 5 5 4 2 2 2 4 4 4 5 5 5 . 
            . 5 5 5 5 4 4 4 4 4 4 4 5 5 5 . 
            . 5 5 5 5 5 4 4 4 4 4 5 5 5 5 . 
            . . 5 5 5 5 5 5 5 5 5 5 5 5 . . 
            . . 5 5 5 5 5 5 5 5 5 5 5 5 . . 
            . . . 5 5 5 5 5 5 5 5 5 5 . . . 
            . . . . 5 5 5 5 5 5 5 . . . . . 
            `],
        100,
        true
        )
        tiles.placeOnTile(coin, value6)
        tiles.setTileAt(value6, myTiles.tile0)
    }
    for (let value7 of tiles.getTilesByType(myTiles.tile3)) {
        flower = sprites.create(img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . d . d . . d . . . . . . . 
            . . . . d d d d d . . . . . . . 
            . . . d d d 5 d d . d . . . . . 
            . . . . d d 5 d d . . . . . . . 
            . . . d d d d d d d . . . . . . 
            . . . . . . 7 . . . . . . . . . 
            . . . . . . 7 7 . . . . . . . . 
            . . . . 7 7 7 7 7 7 . . . . . . 
            . . . . 7 7 7 7 7 7 . . . . . . 
            . . . . . 7 7 7 . . . . . . . . 
            . . . . . . 7 . . . . . . . . . 
            . . . . . . 7 . . . . . . . . . 
            `, SpriteKind.flaw)
        tiles.placeOnTile(flower, value7)
        tiles.setTileAt(value7, myTiles.tile0)
    }
    for (let value8 of tiles.getTilesByType(myTiles.tile5)) {
        bat = sprites.create(img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            `, SpriteKind.Enemy)
        animation.runImageAnimation(
        bat,
        [img`
            . f f f . . . . . . . . f f f . 
            f f c . . . . . . . f c b b c . 
            f c c . . . . . . f c b b c . . 
            c f . . . . . . . f b c c c . . 
            c f f . . . . . f f b b c c . . 
            f f f c c . c c f b c b b c . . 
            f f f c c c c c f b c c b c . . 
            . f c 3 c c 3 b c b c c c . . . 
            . c b 3 b c 3 b b c c c c . . . 
            c c b b b b b b b b c c . . . . 
            c b 1 b b b 1 b b b b f c . . . 
            f b b b b b b b b b b f c c . . 
            f b c b b b c b b b b f . . . . 
            . f 1 f f f 1 b b b c f . . . . 
            . . f b b b b b b c f . . . . . 
            . . . f f f f f f f . . . . . . 
            `,img`
            . . f f f . . . . . . . . . . . 
            f f f c c . . . . . . . . f f f 
            f f c c c . c c . . . f c b b c 
            f f c 3 c c 3 c c f f b b b c . 
            f f c 3 b c 3 b c f b b c c c . 
            f c b b b b b b c f b c b c c . 
            c c 1 b b b 1 b c b b c b b c . 
            c b b b b b b b b b c c c b c . 
            c b 1 f f 1 c b b c c c c c . . 
            c f 1 f f 1 f b b b b f c . . . 
            f f f f f f f b b b b f c . . . 
            f f 2 2 2 2 f b b b b f c c . . 
            . f 2 2 2 2 2 b b b c f . . . . 
            . . f 2 2 2 b b b c f . . . . . 
            . . . f f f f f f f . . . . . . 
            . . . . . . . . . . . . . . . . 
            `,img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . c c . c c . . . . . . . . 
            . . f 3 c c 3 c c c . . . . . . 
            . f c 3 b c 3 b c c c . . . . . 
            f c b b b b b b b b f f . . . . 
            c c 1 b b b 1 b b b f f . . . . 
            c b b b b b b b b c f f f . . . 
            c b 1 f f 1 c b b f f f f . . . 
            f f 1 f f 1 f b c c b b b . . . 
            f f f f f f f b f c c c c . . . 
            f f 2 2 2 2 f b f b b c c c . . 
            . f 2 2 2 2 2 b c c b b c . . . 
            . . f 2 2 2 b f f c c b b c . . 
            . . . f f f f f f f c c c c c . 
            . . . . . . . . . . . . c c c c 
            `,img`
            . . . . . . . . . . . . . . . . 
            . . c c . . c c . . . . . . . . 
            . . c 3 c c 3 c c c . . . . . . 
            . c b 3 b c 3 b c c c . . . . . 
            . c b b b b b b b b f f . . . . 
            c c b b b b b b b b f f . . . . 
            c b 1 b b b 1 b b c f f f . . . 
            c b b b b b b b b f f f f . . . 
            f b c b b b c b c c b b b . . . 
            f b 1 f f f 1 b f c c c c . . . 
            . f b b b b b b f b b c c . . . 
            c c f b b b b b c c b b c . . . 
            c c c f f f f f f c c b b c . . 
            . c c c . . . . . . c c c c c . 
            . . c c c . . . . . . . c c c c 
            . . . . . . . . . . . . . . . . 
            `],
        100,
        true
        )
        tiles.placeOnTile(bat, value8)
        tiles.setTileAt(value8, myTiles.tile0)
        bat.follow(man, 50)
    }
    for (let value9 of tiles.getTilesByType(myTiles.tile11)) {
        checpoint = sprites.create(img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            `, SpriteKind.CHECKPOINT)
        animation.runImageAnimation(
        checpoint,
        [img`
            . . . . . 2 2 2 2 2 2 . . . . . 
            . . . . 2 1 2 2 2 2 2 2 . . . . 
            . . . . 2 2 1 2 2 2 2 2 . . . . 
            . . . . 2 2 2 2 2 2 2 2 . . . . 
            . . . . 2 2 2 2 2 2 2 2 . . . . 
            . . . . . 2 2 2 2 2 2 . . . . . 
            . . . . . . . 6 6 . . . . . . . 
            . . . . . . 6 6 6 . . . . . . . 
            . . . . . 6 6 6 6 6 . . . . . . 
            . . . . 6 6 6 6 6 6 6 . . . . . 
            . . . . 6 6 6 6 6 6 6 . . . . . 
            . . . 6 6 6 6 6 6 6 6 6 . . . . 
            . . . 6 6 6 6 6 6 6 6 6 6 . . . 
            . . . 6 6 6 6 6 6 6 6 6 6 . . . 
            . . 6 6 6 6 6 6 6 6 6 6 6 6 . . 
            6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
            `,img`
            . . . . . 8 8 8 8 8 8 . . . . . 
            . . . . 8 1 8 8 8 8 8 8 . . . . 
            . . . . 8 8 1 8 8 8 8 8 . . . . 
            . . . . 8 8 8 8 8 8 8 8 . . . . 
            . . . . 8 8 8 8 8 8 8 8 . . . . 
            . . . . . 8 8 8 8 8 8 . . . . . 
            . . . . . . . 6 6 . . . . . . . 
            . . . . . . 6 6 6 . . . . . . . 
            . . . . . 6 6 6 6 6 . . . . . . 
            . . . . 6 6 6 6 6 6 6 . . . . . 
            . . . . 6 6 6 6 6 6 6 . . . . . 
            . . . 6 6 6 6 6 6 6 6 6 . . . . 
            . . . 6 6 6 6 6 6 6 6 6 6 . . . 
            . . . 6 6 6 6 6 6 6 6 6 6 . . . 
            . . 6 6 6 6 6 6 6 6 6 6 6 6 . . 
            6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
            `,img`
            . . . . . . . . . 8 8 8 8 8 8 . 
            . . . . . . . . 8 1 8 8 8 8 8 8 
            . . . . . . . . 8 8 1 8 8 8 8 8 
            . . . . . . . . 8 8 8 8 8 8 8 8 
            . . . . . . . . 8 8 8 8 8 8 8 8 
            . . . . . . . . . 8 8 8 8 8 8 . 
            . . . . . . . 6 6 . . . . . . . 
            . . . . . . 6 6 6 . . . . . . . 
            . . . . . 6 6 6 6 6 . . . . . . 
            . . . . 6 6 6 6 6 6 6 . . . . . 
            . . . . 6 6 6 6 6 6 6 . . . . . 
            . . . 6 6 6 6 6 6 6 6 6 . . . . 
            . . . 6 6 6 6 6 6 6 6 6 6 . . . 
            . . . 6 6 6 6 6 6 6 6 6 6 . . . 
            . . 6 6 6 6 6 6 6 6 6 6 6 6 . . 
            6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
            `,img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . 6 6 8 8 8 8 8 8 . 
            . . . . . . 6 6 8 1 8 8 8 8 8 8 
            . . . . . 6 6 6 8 8 1 8 8 8 8 8 
            . . . . 6 6 6 6 8 8 8 8 8 8 8 8 
            . . . . 6 6 6 6 8 8 8 8 8 8 8 8 
            . . . 6 6 6 6 6 6 8 8 8 8 8 8 . 
            . . . 6 6 6 6 6 6 6 6 6 6 . . . 
            . . . 6 6 6 6 6 6 6 6 6 6 . . . 
            . . 6 6 6 6 6 6 6 6 6 6 6 6 . . 
            6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
            `,img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . 8 8 8 8 8 8 . . . . . 
            . . . . 8 1 8 8 8 8 8 8 . . . . 
            . . . . 8 8 1 8 8 8 8 8 . . . . 
            . . . . 8 8 8 8 8 8 8 8 . . . . 
            . . . . 8 8 8 8 8 8 8 8 . . . . 
            . . . 6 6 8 8 8 8 8 8 6 . . . . 
            . . . 6 6 6 6 6 6 6 6 6 6 . . . 
            . . . 6 6 6 6 6 6 6 6 6 6 . . . 
            . . 6 6 6 6 6 6 6 6 6 6 6 6 . . 
            6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
            `,img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . 8 8 8 8 8 8 . . . . . 
            . . . . 8 1 8 8 8 8 8 8 . . . . 
            . . . . 8 8 1 8 8 8 8 8 . . . . 
            . . . . 8 8 8 8 8 8 8 8 . . . . 
            . . . . 8 8 8 8 8 8 8 8 . . . . 
            . . . 6 6 8 8 8 8 8 8 6 . . . . 
            . . . 6 6 6 6 6 6 6 6 6 6 . . . 
            . . . 6 6 6 6 6 6 6 6 6 6 . . . 
            . . 6 6 6 6 6 6 6 6 6 6 6 6 . . 
            6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
            `,img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . 8 8 8 8 8 8 6 6 . . . . . . . 
            8 1 8 8 8 8 8 8 6 . . . . . . . 
            8 8 1 8 8 8 8 8 6 6 . . . . . . 
            8 8 8 8 8 8 8 8 6 6 6 . . . . . 
            8 8 8 8 8 8 8 8 6 6 6 . . . . . 
            . 8 8 8 8 8 8 6 6 6 6 6 . . . . 
            . . . 6 6 6 6 6 6 6 6 6 6 . . . 
            . . . 6 6 6 6 6 6 6 6 6 6 . . . 
            . . 6 6 6 6 6 6 6 6 6 6 6 6 . . 
            6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
            `,img`
            . . 8 8 8 8 8 8 . . . . . . . . 
            . 8 1 8 8 8 8 8 8 . . . . . . . 
            . 8 8 1 8 8 8 8 8 . . . . . . . 
            . 8 8 8 8 8 8 8 8 . . . . . . . 
            . 8 8 8 8 8 8 8 8 . . . . . . . 
            . . 8 8 8 8 8 8 . . . . . . . . 
            . . . . . . . 6 6 . . . . . . . 
            . . . . . . 6 6 6 . . . . . . . 
            . . . . . 6 6 6 6 6 . . . . . . 
            . . . . 6 6 6 6 6 6 6 . . . . . 
            . . . . 6 6 6 6 6 6 6 . . . . . 
            . . . 6 6 6 6 6 6 6 6 6 . . . . 
            . . . 6 6 6 6 6 6 6 6 6 6 . . . 
            . . . 6 6 6 6 6 6 6 6 6 6 . . . 
            . . 6 6 6 6 6 6 6 6 6 6 6 6 . . 
            6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
            `,img`
            . . . . . . . . . . . . . . . . 
            8 8 8 8 8 8 . . . . . . . . . . 
            1 8 8 8 8 8 8 . . . . . . . . . 
            8 1 8 8 8 8 8 . . . . . . . . . 
            8 8 8 8 8 8 8 . . . . . . . . . 
            8 8 8 8 8 8 8 . . . . . . . . . 
            8 8 8 8 8 8 . 6 6 . . . . . . . 
            . . . . . . 6 6 6 . . . . . . . 
            . . . . . 6 6 6 6 6 . . . . . . 
            . . . . 6 6 6 6 6 6 6 . . . . . 
            . . . . 6 6 6 6 6 6 6 . . . . . 
            . . . 6 6 6 6 6 6 6 6 6 . . . . 
            . . . 6 6 6 6 6 6 6 6 6 6 . . . 
            . . . 6 6 6 6 6 6 6 6 6 6 . . . 
            . . 6 6 6 6 6 6 6 6 6 6 6 6 . . 
            6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
            `,img`
            . . . . . 8 8 8 8 8 8 . . . . . 
            . . . . 8 1 8 8 8 8 8 8 . . . . 
            . . . . 8 8 1 8 8 8 8 8 . . . . 
            . . . . 8 8 8 8 8 8 8 8 . . . . 
            . . . . 8 8 8 8 8 8 8 8 . . . . 
            . . . . . 8 8 8 8 8 8 . . . . . 
            . . . . . . . 6 6 . . . . . . . 
            . . . . . . 6 6 6 . . . . . . . 
            . . . . . 6 6 6 6 6 . . . . . . 
            . . . . 6 6 6 6 6 6 6 . . . . . 
            . . . . 6 6 6 6 6 6 6 . . . . . 
            . . . 6 6 6 6 6 6 6 6 6 . . . . 
            . . . 6 6 6 6 6 6 6 6 6 6 . . . 
            . . . 6 6 6 6 6 6 6 6 6 6 . . . 
            . . 6 6 6 6 6 6 6 6 6 6 6 6 . . 
            6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
            `],
        100,
        false
        )
        tiles.placeOnTile(checpoint, value9)
        tiles.setTileAt(value9, myTiles.tile0)
    }
}
sprites.onOverlap(SpriteKind.Player, SpriteKind.CHECKPOINT, function (sprite, otherSprite) {
    man_x = man.x
    man_y = man.y
    checklevel = current_level
    animation.runImageAnimation(
    otherSprite,
    [img`
        . . . . . 2 2 2 2 2 2 . . . . . 
        . . . . 2 1 2 2 2 2 2 2 . . . . 
        . . . . 2 2 1 2 2 2 2 2 . . . . 
        . . . . 2 2 2 2 2 2 2 2 . . . . 
        . . . . 2 2 2 2 2 2 2 2 . . . . 
        . . . . . 2 2 2 2 2 2 . . . . . 
        . . . . . . . 6 6 . . . . . . . 
        . . . . . . 6 6 6 . . . . . . . 
        . . . . . 6 6 6 6 6 . . . . . . 
        . . . . 6 6 6 6 6 6 6 . . . . . 
        . . . . 6 6 6 6 6 6 6 . . . . . 
        . . . 6 6 6 6 6 6 6 6 6 . . . . 
        . . . 6 6 6 6 6 6 6 6 6 6 . . . 
        . . . 6 6 6 6 6 6 6 6 6 6 . . . 
        . . 6 6 6 6 6 6 6 6 6 6 6 6 . . 
        6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
        `,img`
        . . . . . 8 8 8 8 8 8 . . . . . 
        . . . . 8 1 8 8 8 8 8 8 . . . . 
        . . . . 8 8 1 8 8 8 8 8 . . . . 
        . . . . 8 8 8 8 8 8 8 8 . . . . 
        . . . . 8 8 8 8 8 8 8 8 . . . . 
        . . . . . 8 8 8 8 8 8 . . . . . 
        . . . . . . . 6 6 . . . . . . . 
        . . . . . . 6 6 6 . . . . . . . 
        . . . . . 6 6 6 6 6 . . . . . . 
        . . . . 6 6 6 6 6 6 6 . . . . . 
        . . . . 6 6 6 6 6 6 6 . . . . . 
        . . . 6 6 6 6 6 6 6 6 6 . . . . 
        . . . 6 6 6 6 6 6 6 6 6 6 . . . 
        . . . 6 6 6 6 6 6 6 6 6 6 . . . 
        . . 6 6 6 6 6 6 6 6 6 6 6 6 . . 
        6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
        `,img`
        . . . . . . . . . 8 8 8 8 8 8 . 
        . . . . . . . . 8 1 8 8 8 8 8 8 
        . . . . . . . . 8 8 1 8 8 8 8 8 
        . . . . . . . . 8 8 8 8 8 8 8 8 
        . . . . . . . . 8 8 8 8 8 8 8 8 
        . . . . . . . . . 8 8 8 8 8 8 . 
        . . . . . . . 6 6 . . . . . . . 
        . . . . . . 6 6 6 . . . . . . . 
        . . . . . 6 6 6 6 6 . . . . . . 
        . . . . 6 6 6 6 6 6 6 . . . . . 
        . . . . 6 6 6 6 6 6 6 . . . . . 
        . . . 6 6 6 6 6 6 6 6 6 . . . . 
        . . . 6 6 6 6 6 6 6 6 6 6 . . . 
        . . . 6 6 6 6 6 6 6 6 6 6 . . . 
        . . 6 6 6 6 6 6 6 6 6 6 6 6 . . 
        6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
        `,img`
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . 6 6 8 8 8 8 8 8 . 
        . . . . . . 6 6 8 1 8 8 8 8 8 8 
        . . . . . 6 6 6 8 8 1 8 8 8 8 8 
        . . . . 6 6 6 6 8 8 8 8 8 8 8 8 
        . . . . 6 6 6 6 8 8 8 8 8 8 8 8 
        . . . 6 6 6 6 6 6 8 8 8 8 8 8 . 
        . . . 6 6 6 6 6 6 6 6 6 6 . . . 
        . . . 6 6 6 6 6 6 6 6 6 6 . . . 
        . . 6 6 6 6 6 6 6 6 6 6 6 6 . . 
        6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
        `,img`
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . 8 8 8 8 8 8 . . . . . 
        . . . . 8 1 8 8 8 8 8 8 . . . . 
        . . . . 8 8 1 8 8 8 8 8 . . . . 
        . . . . 8 8 8 8 8 8 8 8 . . . . 
        . . . . 8 8 8 8 8 8 8 8 . . . . 
        . . . 6 6 8 8 8 8 8 8 6 . . . . 
        . . . 6 6 6 6 6 6 6 6 6 6 . . . 
        . . . 6 6 6 6 6 6 6 6 6 6 . . . 
        . . 6 6 6 6 6 6 6 6 6 6 6 6 . . 
        6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
        `,img`
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . 8 8 8 8 8 8 . . . . . 
        . . . . 8 1 8 8 8 8 8 8 . . . . 
        . . . . 8 8 1 8 8 8 8 8 . . . . 
        . . . . 8 8 8 8 8 8 8 8 . . . . 
        . . . . 8 8 8 8 8 8 8 8 . . . . 
        . . . 6 6 8 8 8 8 8 8 6 . . . . 
        . . . 6 6 6 6 6 6 6 6 6 6 . . . 
        . . . 6 6 6 6 6 6 6 6 6 6 . . . 
        . . 6 6 6 6 6 6 6 6 6 6 6 6 . . 
        6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
        `,img`
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . 8 8 8 8 8 8 6 6 . . . . . . . 
        8 1 8 8 8 8 8 8 6 . . . . . . . 
        8 8 1 8 8 8 8 8 6 6 . . . . . . 
        8 8 8 8 8 8 8 8 6 6 6 . . . . . 
        8 8 8 8 8 8 8 8 6 6 6 . . . . . 
        . 8 8 8 8 8 8 6 6 6 6 6 . . . . 
        . . . 6 6 6 6 6 6 6 6 6 6 . . . 
        . . . 6 6 6 6 6 6 6 6 6 6 . . . 
        . . 6 6 6 6 6 6 6 6 6 6 6 6 . . 
        6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
        `,img`
        . . 8 8 8 8 8 8 . . . . . . . . 
        . 8 1 8 8 8 8 8 8 . . . . . . . 
        . 8 8 1 8 8 8 8 8 . . . . . . . 
        . 8 8 8 8 8 8 8 8 . . . . . . . 
        . 8 8 8 8 8 8 8 8 . . . . . . . 
        . . 8 8 8 8 8 8 . . . . . . . . 
        . . . . . . . 6 6 . . . . . . . 
        . . . . . . 6 6 6 . . . . . . . 
        . . . . . 6 6 6 6 6 . . . . . . 
        . . . . 6 6 6 6 6 6 6 . . . . . 
        . . . . 6 6 6 6 6 6 6 . . . . . 
        . . . 6 6 6 6 6 6 6 6 6 . . . . 
        . . . 6 6 6 6 6 6 6 6 6 6 . . . 
        . . . 6 6 6 6 6 6 6 6 6 6 . . . 
        . . 6 6 6 6 6 6 6 6 6 6 6 6 . . 
        6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
        `,img`
        . . . . . . . . . . . . . . . . 
        8 8 8 8 8 8 . . . . . . . . . . 
        1 8 8 8 8 8 8 . . . . . . . . . 
        8 1 8 8 8 8 8 . . . . . . . . . 
        8 8 8 8 8 8 8 . . . . . . . . . 
        8 8 8 8 8 8 8 . . . . . . . . . 
        8 8 8 8 8 8 . 6 6 . . . . . . . 
        . . . . . . 6 6 6 . . . . . . . 
        . . . . . 6 6 6 6 6 . . . . . . 
        . . . . 6 6 6 6 6 6 6 . . . . . 
        . . . . 6 6 6 6 6 6 6 . . . . . 
        . . . 6 6 6 6 6 6 6 6 6 . . . . 
        . . . 6 6 6 6 6 6 6 6 6 6 . . . 
        . . . 6 6 6 6 6 6 6 6 6 6 . . . 
        . . 6 6 6 6 6 6 6 6 6 6 6 6 . . 
        6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
        `,img`
        . . . . . 8 8 8 8 8 8 . . . . . 
        . . . . 8 1 8 8 8 8 8 8 . . . . 
        . . . . 8 8 1 8 8 8 8 8 . . . . 
        . . . . 8 8 8 8 8 8 8 8 . . . . 
        . . . . 8 8 8 8 8 8 8 8 . . . . 
        . . . . . 8 8 8 8 8 8 . . . . . 
        . . . . . . . 6 6 . . . . . . . 
        . . . . . . 6 6 6 . . . . . . . 
        . . . . . 6 6 6 6 6 . . . . . . 
        . . . . 6 6 6 6 6 6 6 . . . . . 
        . . . . 6 6 6 6 6 6 6 . . . . . 
        . . . 6 6 6 6 6 6 6 6 6 . . . . 
        . . . 6 6 6 6 6 6 6 6 6 6 . . . 
        . . . 6 6 6 6 6 6 6 6 6 6 . . . 
        . . 6 6 6 6 6 6 6 6 6 6 6 6 . . 
        6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 
        `],
    100,
    true
    )
})
scene.onOverlapTile(SpriteKind.Player, myTiles.tile1, function (sprite, location) {
    GO_TO_CHECKPOINT()
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.Enemy, function (sprite, otherSprite) {
    if (sprite.y > otherSprite.y) {
        info.changeLifeBy(-1)
        music.powerDown.play()
        otherSprite.destroy(effects.fire, 500)
    } else if (sprite.x > otherSprite.y) {
        otherSprite.destroy(effects.fire, 500)
        info.changeScoreBy(1)
        music.powerUp.play()
    } else {
    	
    }
})
let projectile2: Sprite = null
let checpoint: Sprite = null
let bat: Sprite = null
let flower: Sprite = null
let coin: Sprite = null
let bosss: Sprite = null
let man_y = 0
let man_x = 0
let BEE: Sprite = null
let checklevel = 0
let current_level = 0
let man: Sprite = null
scene.setBackgroundColor(9)
man = sprites.create(img`
    . . . . . . f f f f . . . . . . 
    . . . . f f f 8 8 f f f . . . . 
    . . . f f f 8 8 8 8 f f f . . . 
    . . f f f e e e e e e f f f . . 
    . . f f 8 8 8 8 8 8 8 e e f . . 
    . . f e 8 f f f f f f 8 e f . . 
    . . f f f f e e e e f f f f . . 
    . f f e f b f 4 4 f b f e f f . 
    . f e e 4 1 f d d f 1 4 e e f . 
    . . f e e d d d d d d e e f . . 
    . . . f e e 4 4 4 4 e e f . . . 
    . . e 4 f 8 8 8 8 8 8 f 4 e . . 
    . . 4 d f 8 8 8 8 8 8 f d 4 . . 
    . . 4 4 f e e e e e e f 4 4 . . 
    . . . . . f f f f f f . . . . . 
    . . . . . f f . . f f . . . . . 
    `, SpriteKind.Player)
controller.moveSprite(man, 100, 0)
current_level = 0
console.log("on game start check level is")
console.log(checklevel)
checklevel = 0
startlevel()
game.onUpdate(function () {
    man.setImage(img`
        . . . . . . f f f f . . . . . . 
        . . . . f f f 8 8 f f f . . . . 
        . . . f f f 8 8 8 8 f f f . . . 
        . . f f f e e e e e e f f f . . 
        . . f f e 8 8 8 8 8 8 e e f . . 
        . . f e 8 f f f f f f 8 e f . . 
        . . f f f f e e e e f f f f . . 
        . f f e f b f 4 4 f b f e f f . 
        . f e e 4 1 f d d f 1 4 e e f . 
        . . f e e d d d d d d e e f . . 
        . . . f e e 4 4 4 4 e e f . . . 
        . . e 4 f 8 8 8 8 8 8 f 4 e . . 
        . . 4 d f 8 8 8 8 8 8 f d 4 . . 
        . . 4 4 f e e e e e e f 4 4 . . 
        . . . . . f f f f f f . . . . . 
        . . . . . f f . . f f . . . . . 
        `)
    if (man.vy < 0) {
        man.setImage(img`
            . . . . . . f f f f . . . . . . 
            . . . . f f f 8 8 f f f . . . . 
            . . . f f f 8 8 8 8 f f f . . . 
            . . f f f e e e e e e f f f . . 
            . . f f 8 8 8 8 8 8 8 e e f . . 
            . . f e 8 f f f f f f 8 e f . . 
            . . f f f f e e e e f f f f . . 
            . f f e f b f 4 4 f b f e f f . 
            . f 4 4 e 1 f d d f 1 e e e f . 
            . . 4 d e d d d d d d e e f . . 
            . . 4 4 e e 4 4 4 4 e e f . . . 
            . . e 4 f 8 8 8 8 8 8 f 4 e . . 
            . . . . f 8 8 8 8 8 8 f d 4 . . 
            . . . . f e e e e e e f 4 4 . . 
            . . . . . f f f f f f . . . . . 
            . . . . . f f . . f f . . . . . 
            `)
    } else if (man.vy > 0) {
        man.setImage(img`
            . . . . . . f f f f . . . . . . 
            . . . . f f f 8 8 f f f . . . . 
            . . . f f f 8 8 8 8 f f f . . . 
            . . f f f e e e e e e f f f . . 
            . . f f e 8 8 8 8 8 8 e e f . . 
            . . f e 8 f f f f f f 8 e f . . 
            . . f f f f e e e e f f f f . . 
            . f f e f b f 4 4 f b f e f f . 
            . f 4 4 4 1 f d d f 1 4 4 4 f . 
            . . 4 d e d d d d d d e 4 d . . 
            . . 4 4 e e 4 4 4 4 e e 4 4 . . 
            . . e 4 f 8 8 8 8 8 8 f 4 e . . 
            . . . . f 8 8 8 8 8 8 f . . . . 
            . . . . f e e e e e e f . . . . 
            . . . . . f f f f f f . . . . . 
            . . . . . f f . . f f . . . . . 
            `)
    } else if (man.x % 2 == 0) {
        man.setImage(img`
            . . . . . . f f f f f f . . . . 
            . . . . f f e e e e f 8 f . . . 
            . . . f f e e e e f 8 8 8 f . . 
            . . . f e e e f f e e e e f . . 
            . . . f f f f e e 8 8 8 8 e f . 
            . . . f e 8 8 8 f f f f e 8 f . 
            . . f f f f f f f e e e f f f . 
            . . f f e 4 4 e b f 4 4 e e f . 
            . . f e e 4 d 4 1 f d d e f . . 
            . . . f e e e 4 d d d d f . . . 
            . . . . f f e e 4 4 4 e f . . . 
            . . . . . 4 d d e 8 8 8 f . . . 
            . . . . . e d d e 8 8 8 f . . . 
            . . . . . f e e f e e e f . . . 
            . . . . . . f f f f f f . . . . 
            . . . . . . . f f f . . . . . . 
            `)
    } else if (false) {
    	
    }
    if (man.vx < 0) {
        man.image.flipX()
    }
})
forever(function () {
	
})
game.onUpdateInterval(500, function () {
    if (current_level == 3) {
        projectile2 = sprites.createProjectileFromSprite(img`
            . . . . . 2 2 2 . . . . . . . . 
            2 2 2 2 4 2 . . . . 4 . . . 4 . 
            5 5 5 2 4 . . 4 . 2 . . . . . . 
            5 5 4 2 4 2 2 2 . . 2 . 2 . . . 
            2 5 5 2 4 . . 2 . . . . . . 2 . 
            2 2 2 2 4 2 2 . 4 . 2 2 . . . . 
            . . . . . . 2 2 2 . . 4 4 4 . . 
            . . . . . . . 4 4 4 4 4 . . 4 . 
            `, bosss, -100, 0)
    }
})
